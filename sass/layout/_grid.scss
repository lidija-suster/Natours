.row {
  max-width: $grid-width;
  margin: 0 auto;

  // add margin bottom to all row children, except on the last child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  // mixin for clearing floats
  @include clearfix;

  // select by attribute with ^ sign - select all classes that start with "col-"
  // * sign means select all classes that CONTAINS "col-"
  // $ sign means select all classes that ENDS with "col-"
  [class^="col-"] {
    float: left;

    // don't add right margin to the last child of a row
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  // in calc() function in css, in order to use sass variable, it has to be written
  // with # at the beggining, and it has to be wrapped in curly braces

  // below are calculations for column widths, based on widths of a row and gutters
  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }
}
